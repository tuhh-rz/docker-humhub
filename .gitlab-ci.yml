variables:
    CONTAINER_RELEASE_IMAGE: docker.rz.tu-harburg.de:5000/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    LATEST_VERSION: '1.6'
    APP: 'HumHub'
    APP_OVERVIEW_URL: https://cgi.tu-harburg.de/~rztwww/Software/program_file.json
    KEY: "${APP} ${VERSION}"
    MAPPING: '1:1.6'
    BUILD_VERSIONS: '' # Use Pipeline Variables to overwrite

# https://docs.gitlab.com/ee/ci/yaml/README.html#exclude-jobs-with-rules-from-certain-pipelines
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.build_script_template: &build_script_definition
  - KEY="${KEY#"${KEY%%[![:space:]]*}"}"
  - KEY="${KEY%"${KEY##*[![:space:]]}"}"
  - DOCKERFILE_DIR="${VERSION}"/"${VARIANT}"
  - if [[ "$DOCKERFILE_DIR" =~ ^/$ ]]; then DOCKERFILE_DIR='.'; fi

  - structure=$(curl -s ${APP_OVERVIEW_URL} | jq --arg KEY "$KEY" --arg APP "$APP" --raw-output '.[$APP] | .[$KEY]')
  - if [[ -z "$structure" ]] || [[ $structure == "null" ]]; then echo "UNKNOWN $APP $KEY"; exit 0; fi

  - version=$(jq --raw-output '.version' <<<"$structure")
  - if [[ -z $version ]] || [[ $version == "null" ]]; then exit 1; fi
  - version=$(echo $version | sed -e 's/%2B/+/g')

  - download=$(jq --raw-output '.download' <<<"$structure")
  - if [[ -z $download ]] || [[ $download == "null" ]]; then exit 1; fi

  - sudo docker build --build-arg DOWNLOAD="${download}" --build-arg VERSION="${version}" --no-cache --pull -t "${CONTAINER_RELEASE_IMAGE}":"${VERSION:-latest}${VARIANT:+-$VARIANT}" "${DOCKERFILE_DIR}"

.build_branches_script_template: &build_branches_script_definition
  - KEY="${KEY#"${KEY%%[![:space:]]*}"}"
  - KEY="${KEY%"${KEY##*[![:space:]]}"}"
  - DOCKERFILE_DIR="${VERSION}"/"${VARIANT}"
  - if [[ "$DOCKERFILE_DIR" =~ ^/$ ]]; then DOCKERFILE_DIR='.'; fi
  
  - structure=$(curl -s ${APP_OVERVIEW_URL} | jq --arg KEY "$KEY" --arg APP "$APP" --raw-output '.[$APP] | .[$KEY]')
  - if [[ -z "$structure" ]] || [[ $structure == "null" ]]; then echo "UNKNOWN $APP $KEY"; exit 0; fi

  - version=$(jq --raw-output '.version' <<<"$structure")
  - if [[ -z $version ]] || [[ $version == "null" ]]; then exit 1; fi
  - version=$(echo $version | sed -e 's/%2B/+/g')

  # - download=$(jq --raw-output '.download' <<<"$structure")
  # - if [[ -z $download ]] || [[ $download == "null" ]]; then exit 1; fi

  - sudo docker build --build-arg DOWNLOAD="${download}" --build-arg VERSION="${version}" --pull -t "${CONTAINER_RELEASE_IMAGE}":"${VERSION:-latest}${VARIANT:+-$VARIANT}"_"${CI_COMMIT_REF_SLUG}" "${DOCKERFILE_DIR}"

.build_before_script_template: &build_before_script_definition
  - git submodule update --init --recursive

.deploy_script_template: &deploy_script_definition
  - sudo docker push "${CONTAINER_RELEASE_IMAGE}":"${VERSION:-latest}${VARIANT:+-$VARIANT}"
  - if [ ! -z ${LATEST_VERSION} ] && [ "${LATEST_VERSION}" == "${VERSION}${VARIANT:+-$VARIANT}" ]; then sudo docker tag "${CONTAINER_RELEASE_IMAGE}":"${VERSION:-latest}${VARIANT:+-$VARIANT}" "${CONTAINER_RELEASE_IMAGE}:latest"; sudo docker push "${CONTAINER_RELEASE_IMAGE}:latest"; fi

.build_branches_before_script_template: &build_branches_before_script_definition
  - git submodule update --init --recursive

.deploy_branches_script_template: &deploy_branches_script_definition
  - sudo docker push "${CONTAINER_RELEASE_IMAGE}":"${VERSION:-latest}${VARIANT:+-$VARIANT}"_"${CI_COMMIT_REF_SLUG}"

.default_rules: &default_rules
    - if: '$CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH'
      when: never
    - if: '$BUILD_VERSIONS == ""'
      when: always
    - if: '$BUILD_VERSIONS == $VERSION'
      when: always
    - when: never

stages:
    - build
    - deploy

build:incubator:1.6:
    stage: build
    rules:
        - if: '$CI_COMMIT_REF_NAME == "incubator"'
    retry:
        max: 1
        when: runner_system_failure
    tags:
        - build
    variables:
        VERSION: '1.6'
        VARIANT: ''
    before_script:
        - *build_branches_before_script_definition
    script:
        - *build_branches_script_definition

deploy:incubator:1.6:
    stage: deploy
    rules:
        - if: '$CI_COMMIT_REF_NAME == "incubator"'
    needs: ["build:incubator:1.6"]
    tags:
        - deploy
    variables:
        VERSION: "1.6"
        VARIANT: ""
    script:
        - *deploy_branches_script_definition

build:1.6:
    stage: build
    rules:
        <<: *default_rules
    retry:
        max: 1
        when: runner_system_failure
    tags:
        - build
    variables:
        VERSION: '1.6'
        VARIANT: ''
    before_script:
        - *build_before_script_definition
    script:
        - *build_script_definition
    
deploy:1.6:
    needs: ["build:1.6"]
    stage: deploy
    tags:
        - deploy
    rules:
        <<: *default_rules
    variables:
        VERSION: '1.6'
        VARIANT: ''
    script:
        - *deploy_script_definition
    
build:branches:1.6:
    stage: build  
    rules:
        - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
          when: never
        - if: '$CI_COMMIT_REF_NAME == "incubator"'
          when: never
        - when: always
    retry:
        max: 1
        when: runner_system_failure
    tags:
        - build
    variables:
        VERSION: '1.6'
        VARIANT: ''
    before_script:
        - *build_branches_before_script_definition
    script:
        - *build_branches_script_definition
    
deploy:branches:1.6:
    needs: ["build:branches:1.6"]
    stage: deploy
    tags:
        - deploy
    rules:
        - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
          when: never
        - if: '$CI_COMMIT_REF_NAME == "incubator"'
          when: never
        - when: always
    variables:
        VERSION: '1.6'
        VARIANT: ''
    script:
        - *deploy_branches_script_definition


# build:incubator:1.5:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.5'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:incubator:1.5:
#     stage: deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     needs: ["build:incubator:1.5:"]
#     tags:
#         - deploy
#     variables:
#         VERSION: "1.5"
#         VARIANT: ""
#     script:
#         - *deploy_branches_script_definition

# build:1.5:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.5'
#         VARIANT: ''
#     before_script:
#         - *build_before_script_definition
#     script:
#         - *build_script_definition

# deploy:1.5:
#     needs: ["build:1.5"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     variables:
#         VERSION: '1.5'
#         VARIANT: ''
#     script:
#         - *deploy_script_definition

# build:branches:1.5:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.5'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:branches:1.5:
#     needs: ["build:branches:1.5"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     variables:
#         VERSION: '1.5'
#         VARIANT: ''
#     script:
#         - *deploy_branches_script_definition

# build:incubator:1.4:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.4'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:incubator:1.4:
#     stage: deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     needs: ["build:incubator:1.4:"]
#     tags:
#         - deploy
#     variables:
#         VERSION: "1.4"
#         VARIANT: ""
#     script:
#         - *deploy_branches_script_definition

# build:1.4:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.4'
#         VARIANT: ''
#     before_script:
#         - *build_before_script_definition
#     script:
#         - *build_script_definition

# deploy:1.4:
#     needs: ["build:1.4"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     variables:
#         VERSION: '1.4'
#         VARIANT: ''
#     script:
#         - *deploy_script_definition

# build:branches:1.4:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.4'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:branches:1.4:
#     needs: ["build:branches:1.4"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     variables:
#         VERSION: '1.4'
#         VARIANT: ''
#     script:
#         - *deploy_branches_script_definition

# build:incubator:1.3:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.3'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:incubator:1.3:
#     stage: deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#     needs: ["build:incubator:1.3:"]
#     tags:
#         - deploy
#     variables:
#         VERSION: "1.3"
#         VARIANT: ""
#     script:
#         - *deploy_branches_script_definition

# build:1.3:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.3'
#         VARIANT: ''
#     before_script:
#         - *build_before_script_definition
#     script:
#         - *build_script_definition

# deploy:1.3:
#     needs: ["build:1.3"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     variables:
#         VERSION: '1.3'
#         VARIANT: ''
#     script:
#         - *deploy_script_definition

# build:branches:1.3:
#     stage: build
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     retry:
#         max: 1
#         when: runner_system_failure
#     tags:
#         - build
#     variables:
#         VERSION: '1.3'
#         VARIANT: ''
#     before_script:
#         - *build_branches_before_script_definition
#     script:
#         - *build_branches_script_definition

# deploy:branches:1.3:
#     needs: ["build:branches:1.3"]
#     stage: deploy
#     tags:
#         - deploy
#     rules:
#         - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#           when: never
#         - if: '$CI_COMMIT_REF_NAME == "incubator"'
#           when: never
#         - when: always
#     variables:
#         VERSION: '1.3'
#         VARIANT: ''
#     script:
#         - *deploy_branches_script_definition
